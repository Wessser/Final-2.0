import mongoose from 'mongoose';

// Создание схемы Mongoose для модели "Post"
const PostSchema = new mongoose.Schema(
  {
    // Поле "title" для заголовка поста, обязательное (required)
    title: {
      type: String, // Тип данных - строка
      required: true, // Обязательное поле
    },
    
    // Поле "text" для основного текста поста, обязательное и уникальное
    text: {
      type: String, // Тип данных - строка
      required: true, // Обязательное поле
      unique: true, // Значение должно быть уникальным
    },
    
    // Поле "tags" для хранения тегов, массив с пустым значением по умолчанию
    tags: {
      type: Array, // Тип данных - массив
      default: [], // Значение по умолчанию - пустой массив
    },
    
    // Поле "viewsCount" для хранения количества просмотров, значение по умолчанию 0
    viewsCount: {
      type: Number, // Тип данных - число
      default: 0, // Значение по умолчанию - 0
    },
    
    // Поле "user" для хранения ссылки на объект "User", обязательное
    user: {
      type: mongoose.Schema.Types.ObjectId, // Тип данных - ObjectId (ссылка на другой объект)
      ref: 'User', // Указывает на модель "User"
      required: true, // Обязательное поле
    },
    
    // Поле "imageUrl" для хранения URL изображения (необязательное поле)
    imageUrl: String, // Тип данных - строка
  },
  {
    // Опция timestamps автоматически добавляет поля "createdAt" и "updatedAt"
    timestamps: true, // Автоматически добавляет временные метки
  },
);

// Экспорт модели "Post" на основе определенной схемы
export default mongoose.model('Post', PostSchema);


// Объяснение:
// Обязательные поля: Поля title, text, и user имеют атрибут required: true, указывающий, что они обязательны для заполнения.
// Уникальность: Поле text также имеет атрибут unique: true, что означает, что текст должен быть уникальным среди всех документов в коллекции.
// Ссылки на другие модели: Поле user является ссылкой на модель User, с типом ObjectId. Это позволяет связывать пост с пользователем, который его создал.
// Поля по умолчанию: Поля tags и viewsCount имеют значения по умолчанию (пустой массив и 0, соответственно).
// Опция timestamps: Устанавливая timestamps: true, автоматически добавляются поля createdAt и updatedAt, указывающие время создания и последнего обновления поста.