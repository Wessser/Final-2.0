import mongoose from 'mongoose';

// Создаем схему Mongoose для модели "User"
const UserSchema = new mongoose.Schema(
  {
    // Поле "fullName" для хранения полного имени пользователя
    fullName: {
      type: String, // Тип данных - строка
      required: true, // Обязательное поле
    },
    
    // Поле "email" для хранения электронной почты, обязательно и уникально
    email: {
      type: String, // Тип данных - строка
      required: true, // Обязательное поле
      unique: true, // Значение должно быть уникальным
    },
    
    // Поле "passwordHash" для хранения хеша пароля пользователя, обязательное
    passwordHash: {
      type: String, // Тип данных - строка
      required: true, // Обязательное поле
    },
    
    // Поле "avatarUrl" для хранения URL-адреса аватара пользователя (необязательное поле)
    avatarUrl: String, // Тип данных - строка
  },
  {
    // Опция `timestamps` автоматически добавляет поля "createdAt" и "updatedAt"
    timestamps: true, // Автоматически добавляет временные метки
  },
);

// Экспорт модели "User" на основе определенной схемы
export default mongoose.model('User', UserSchema);

// Объяснение:
// Обязательные поля: Поля fullName, email, и passwordHash помечены как обязательные (required: true), что означает, что они должны быть заполнены при создании пользователя.
// Уникальность: Поле email имеет атрибут unique: true, что обеспечивает уникальность каждого адреса электронной почты среди всех пользователей.
// Пароль: passwordHash хранит хеш пароля, что позволяет безопасно хранить пароли в базе данных (хеширование необходимо для защиты паролей).
// Аватар: Поле avatarUrl позволяет хранить URL аватара пользователя (это необязательное поле, поэтому тип данных просто String).
// Опция timestamps: Добавляет автоматическое заполнение полей createdAt и updatedAt, что указывает время создания и последнего обновления записи о пользователе.
