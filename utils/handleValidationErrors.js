import { validationResult } from 'express-validator';

export default (req, res, next) => {
  // Получаем результаты валидации для текущего запроса
  const errors = validationResult(req);

  // Если результаты валидации содержат ошибки
  if (!errors.isEmpty()) {
    // Возвращаем статус 400 (Bad Request) и массив ошибок в формате JSON
    return res.status(400).json(errors.array());
  }

  // Если ошибок нет, переходим к следующему обработчику
  next();
};

// Проверка ошибок валидации: Код использует validationResult(req), чтобы получить результаты валидации для текущего запроса. Если errors.isEmpty() возвращает false, это означает, что в запросе есть ошибки валидации.
// Обработка ошибок: Если валидация обнаружила ошибки, код возвращает статус 400 (Bad Request) и массив ошибок в формате JSON с помощью errors.array(). Это дает клиенту подробную информацию о том, какие поля содержат ошибки и какие правила были нарушены.
// Переход к следующему обработчику: Если валидация прошла успешно (без ошибок), код вызывает next(), чтобы передать управление следующему обработчику в цепочке.